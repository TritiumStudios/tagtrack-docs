"use strict";(self.webpackChunktagtrack_docs=self.webpackChunktagtrack_docs||[]).push([[215],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),v=a,g=u["".concat(s,".").concat(v)]||u[v]||p[v]||i;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},3729:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2},o="Collecting Data",l={unversionedId:"products/ttl-318-uhf-reader/collecting-data",id:"products/ttl-318-uhf-reader/collecting-data",title:"Collecting Data",description:"Use a webhook to collect data from the TTL-318.",source:"@site/docs/products/ttl-318-uhf-reader/collecting-data.md",sourceDirName:"products/ttl-318-uhf-reader",slug:"/products/ttl-318-uhf-reader/collecting-data",permalink:"/docs/products/ttl-318-uhf-reader/collecting-data",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/products/ttl-318-uhf-reader/getting-started"},next:{title:"Configuration",permalink:"/docs/products/ttl-318-uhf-reader/configuration"}},s={},c=[{value:"Messages",id:"messages",level:2},{value:"Tags Added",id:"tags-added",level:3},{value:"Tags Removed",id:"tags-removed",level:3},{value:"Current Inventory Count",id:"current-inventory-count",level:3},{value:"Current Inventory Tags",id:"current-inventory-tags",level:3},{value:"Tag Timeout Result",id:"tag-timeout-result",level:3},{value:"Tag Interval Result",id:"tag-interval-result",level:3},{value:"Scan Interval Result",id:"scan-interval-result",level:3},{value:"Device Connected",id:"device-connected",level:3},{value:"Device Disconnected",id:"device-disconnected",level:3},{value:"Device Location Report",id:"device-location-report",level:3},{value:"Notes",id:"notes",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"collecting-data"},"Collecting Data"),(0,a.kt)("p",null,"Use a ",(0,a.kt)("strong",{parentName:"p"},"webhook")," to collect data from the TTL-318."),(0,a.kt)("p",null,"TagTrack will forward device messages to a specified webhook. Use these messages to collect data from the device."),(0,a.kt)("h2",{id:"messages"},"Messages"),(0,a.kt)("h3",{id:"tags-added"},"Tags Added"),(0,a.kt)("p",null,"Automatically sent when tag(s) are added to the inventory."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "tags_added": [ <tag_1>, <tag_2>, ... ] }')),(0,a.kt)("h3",{id:"tags-removed"},"Tags Removed"),(0,a.kt)("p",null,"Automatically sent when a tag(s) are removed from the inventory."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "tags_removed": [ <tag_1>, <tag_2>, ... ] }')),(0,a.kt)("h3",{id:"current-inventory-count"},"Current Inventory Count"),(0,a.kt)("p",null,"Sent in response to a query of the inventory (See ",(0,a.kt)("a",{parentName:"p",href:"/docs/products/ttl-318-uhf-reader/configuration#query-inventory"},"Query Inventory API"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "tag_count": <tag_count> }')),(0,a.kt)("h3",{id:"current-inventory-tags"},"Current Inventory Tags"),(0,a.kt)("p",null,"Sent in response to a query of the inventory (See ",(0,a.kt)("a",{parentName:"p",href:"/docs/products/ttl-318-uhf-reader/configuration#query-inventory"},"Query Inventory API"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "tags": [ <tag_1>, <tag_2>, ... ] }')),(0,a.kt)("h3",{id:"tag-timeout-result"},"Tag Timeout Result"),(0,a.kt)("p",null,"Sent in response to setting the tag timeout (See ",(0,a.kt)("a",{parentName:"p",href:"/docs/products/ttl-318-uhf-reader/configuration#set-tag-timeout"},"Set Tag Timeout API"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "tag_timeout": <tag_timeout> }')),(0,a.kt)("h3",{id:"tag-interval-result"},"Tag Interval Result"),(0,a.kt)("p",null,"Sent in response to setting the tag interval (See ",(0,a.kt)("a",{parentName:"p",href:"/docs/products/ttl-318-uhf-reader/configuration#set-tag-interval"},"Set Tag Interval API"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "tag_interval": <tag_interval> }')),(0,a.kt)("h3",{id:"scan-interval-result"},"Scan Interval Result"),(0,a.kt)("p",null,"Sent in response to setting the scan interval (See ",(0,a.kt)("a",{parentName:"p",href:"/docs/products/ttl-318-uhf-reader/configuration#set-scan-interval"},"Set Scan Interval API"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "scan_interval": <scan_interval> }')),(0,a.kt)("h3",{id:"device-connected"},"Device Connected"),(0,a.kt)("p",null,"Sent when the device connects to the network."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "status": "Online" }')),(0,a.kt)("h3",{id:"device-disconnected"},"Device Disconnected"),(0,a.kt)("p",null,"Sent when the device disconnects from the network."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "status": "Offline" }')),(0,a.kt)("h3",{id:"device-location-report"},"Device Location Report"),(0,a.kt)("p",null,"Sent when the device has an initial GPS fix as well as in response to requesting the current location (See ",(0,a.kt)("a",{parentName:"p",href:"/docs/products/ttl-318-uhf-reader/configuration#request-device-location"},"Request Device Location API"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "device_id": <serial_number>, "latitude": <latitude>, "longitude": <longitude> }')),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The endpoint should be configured to accept POST requests in JSON format."),(0,a.kt)("li",{parentName:"ul"},"The endpoint should respond with a HTTP status code of 200 within 5 seconds."),(0,a.kt)("li",{parentName:"ul"},"If a 200 status code is not returned within 5 seconds, the message service will attempt up to 3 requests with a delay of 5 seconds between requests. After this, the message will be discarded.")))}p.isMDXComponent=!0}}]);